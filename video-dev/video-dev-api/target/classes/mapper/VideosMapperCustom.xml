<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.akuida.mapper.VideosMapperCustom">
	<resultMap id="BaseResultMap"
		type="com.akuida.pojo.vo.VideosVo">
		<!-- WARNING - @mbg.generated -->
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="audio_id" property="audioId" jdbcType="VARCHAR" />
		<result column="video_desc" property="videoDesc"
			jdbcType="VARCHAR" />
		<result column="video_path" property="videoPath"
			jdbcType="VARCHAR" />
		<result column="video_seconds" property="videoSeconds"
			jdbcType="REAL" />
		<result column="video_width" property="videoWidth"
			jdbcType="INTEGER" />
		<result column="video_height" property="videoHeight"
			jdbcType="INTEGER" />
		<result column="cover_path" property="coverPath"
			jdbcType="VARCHAR" />
		<result column="like_counts" property="likeCounts"
			jdbcType="BIGINT" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime"
			jdbcType="TIMESTAMP" />
		<result column="face_image" property="faceImage"
			jdbcType="VARCHAR" />
		<result column="nickName" property="nickName"
			jdbcType="VARCHAR" />
	</resultMap>

	<select id="queryAllVideos" resultMap="BaseResultMap">
		select v.id,v.user_id,v.audio_id,v.video_desc,v.video_path,
		v.video_seconds,v.video_width,v.video_height,v.cover_path,
		v.like_counts,v.status,v.create_time,u.face_image,u.nickName
		from
		videos v
		left join users u
		on u.id = v.user_id
		where v.status = 1
		<if test="videoDesc != null and videoDesc != ''">
			and v.video_desc like concat(concat('%',#{videoDesc}),'%')
		</if>
		<if test="userId != null and userId != ''">
			and v.user_id = #{userId}
		</if>
		order by v.create_time desc
	</select>

	<update id="addVideoLikeCount" parameterType="String">
		update videos set
		like_counts = like_counts + 1
		where id = #{videoId}
	</update>

	<update id="reduceVideoLikeCount" parameterType="String">
		update videos
		set like_counts = like_counts - 1
		where id = #{videoId}
	</update>

	<select id="queryMyLikeVideos" parameterType="String"
		resultMap="BaseResultMap">
		select v.id,v.user_id,v.audio_id,v.video_desc,v.video_path,
		v.video_seconds,v.video_width,v.video_height,v.cover_path,
		v.like_counts,v.status,v.create_time,u.face_image, u.nickname
		from
		videos v
		left join users u on v.user_id = u.id
		where
		v.id in(select
		video_id from users_like_videos where user_id = #{userId})
		and v.status
		= 1
		order by v.create_time desc
	</select>
	
	<select id="queryMyFollowVideos" parameterType="String" resultMap="BaseResultMap">
		select v.id,v.user_id,v.audio_id,v.video_desc,v.video_path,
		v.video_seconds,v.video_width,v.video_height,v.cover_path,
		v.like_counts,v.status,v.create_time,u.face_image, u.nickname
		from
		videos v
		left join users u on v.user_id = u.id
		where v.user_id in (select user_id from users_fans where fan_id = #{userId})
		and v.status
		= 1
		order by v.create_time desc
	</select>
	
</mapper>